{"version":3,"sources":["fakeApi/user.ts","hooks/useEffectAsync.ts","components/hooks/useEffectAsync/index.tsx","components/hooks/useRef/index.tsx","components/suspense/lazyLoad/index.tsx","components/webComponents/square.ts","components/webComponents/index.tsx","components/router/index.tsx","components/hooks/useReducer/color.tsx","components/hooks/useReducer/index.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["userBase","name","age","birthday","Date","now","getUser","Promise","resolve","reject","setTimeout","Math","random","useFetchUserList","deps","fn","useState","data","setData","loading","setLoading","fetchId","setFetchId","error","setError","useEffect","undefined","a","result","cb","refetch","useEffectAsync","EffectAsyncPage","message","closable","type","onClick","disabled","RefPage","OtherComponet","lazy","AnotherComponent","LazyLoadPage","fallback","Square","shadow","attachShadow","mode","div","document","createElement","style","appendChild","console","log","updateStyle","this","oldValue","newValue","HTMLElement","elem","shadowRoot","querySelector","textContent","getAttribute","customElements","define","WebComponentSquare","l","setL","c","Home","About","Topics","match","useRouteMatch","to","url","path","Topic","topicId","useParams","createContext","reducer","state","action","color","FontArea","useReducer","dispatch","routerConfig","hasSubMenu","children","component","Content","Header","Sider","SubMenu","App","collapsed","setCollapsed","logoFontSize","setLogoFontSize","location","useHistory","useLocation","trigger","collapsible","fontSize","textAlign","lineHeight","height","defaultSelectedKeys","defaultOpenKeys","selectedKeys","pathname","theme","map","config","title","key","item","Item","background","padding","className","margin","minHeight","child","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7d12cff.chunk.js","sourcesContent":["export type UserType = {\r\n  name: string;\r\n  age: number;\r\n  birthday: number;\r\n};\r\nconst userBase: UserType = {\r\n  name: '吕轻侯',\r\n  age: 27,\r\n  birthday: Date.now(),\r\n};\r\nexport const getUser = () =>\r\n  new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (Math.random() > 0.5) {\r\n        resolve(userBase);\r\n      } else {\r\n        reject('get user error');\r\n      }\r\n    }, 2000);\r\n  });\r\n","import { useEffect, useState, DependencyList } from 'react';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport { getUser } from '../fakeApi/user';\r\n\r\ntype AsyncCallback = (...args: any[]) => Promise<any>;\r\n\r\nconst useEffectAsync = <T>(fn: AsyncCallback, deps?: DependencyList) => {\r\n  const [data, setData] = useState<T>();\r\n  const [loading, setLoading] = useState(true);\r\n  const [fetchId, setFetchId] = useState(Date.now());\r\n  const [error, setError] = useState();\r\n\r\n  const refetch = () => setFetchId(Date.now());\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(undefined);\r\n    const cb = async () => {\r\n      try {\r\n        const result = await fn();\r\n\r\n        setData(result);\r\n      } catch (e) {\r\n        setError(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    cb();\r\n  }, [...(deps || []), fetchId]);\r\n  return {\r\n    data,\r\n    loading,\r\n    refetch,\r\n    error,\r\n  };\r\n};\r\nexport const useFetchUserList = <T>(deps?: DependencyList) => {\r\n  const state = useEffectAsync<T>(getUser, deps);\r\n  return state;\r\n};\r\n","import * as React from 'react';\r\nimport { useFetchUserList } from '../../../hooks/useEffectAsync';\r\nimport { Card, Spin, Alert, Button } from 'antd';\r\nimport { UserType } from '../../../fakeApi/user';\r\n\r\n/**\r\n * this example shows how the useEffectAsync hooks works\r\n */\r\nconst EffectAsyncPage: React.FC = () => {\r\n  const { data, refetch, loading, error } = useFetchUserList<UserType>();\r\n  return (\r\n    <Card>\r\n      {loading ? (\r\n        <>\r\n          <Spin />\r\n          <br />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {error ? <Alert message={error} closable type=\"error\"></Alert> : <></>}\r\n          <p>姓名：{data && data.name}</p>\r\n          <p>年龄：{data && data.age}</p>\r\n          <p>生日：{data && data.birthday}</p>\r\n        </>\r\n      )}\r\n      <Button onClick={refetch} disabled={loading}>\r\n        refetch\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EffectAsyncPage;\r\n","import * as React from 'react';\r\n\r\n/**\r\n * TODO\r\n */\r\nconst RefPage: React.FC = () => {\r\n  return <div>ref example</div>;\r\n};\r\n\r\nexport default RefPage;\r\n","import * as React from 'react';\r\nimport { lazy, Suspense } from 'react';\r\nimport { Spin } from 'antd';\r\nconst OtherComponet = lazy(() => import('./OtherComponent'));\r\nconst AnotherComponent = lazy(() => import('./AnotherComponent'));\r\n\r\n/**\r\n * suspense + lazy\r\n * 浏览器设置网络为低速，更直观\r\n */\r\nconst LazyLoadPage: React.FC = () => {\r\n  return (\r\n    <Suspense fallback={<Spin />}>\r\n      <section>\r\n        <OtherComponet />\r\n        <AnotherComponent />\r\n      </section>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default LazyLoadPage;\r\n","class Square extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['l', 'c'];\r\n  }\r\n  constructor() {\r\n    super();\r\n\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    const div = document.createElement('div');\r\n    const style = document.createElement('style');\r\n\r\n    shadow.appendChild(div);\r\n    shadow.appendChild(style);\r\n  }\r\n\r\n  connectedCallback() {\r\n    console.log('custom element Square added to page');\r\n    updateStyle(this);\r\n  }\r\n  disconnectedCallback() {\r\n    console.log('Custom square element removed from page.');\r\n  }\r\n\r\n  adoptedCallback() {\r\n    console.log('Custom square element moved to new page.');\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    console.log('Custom square element attributes changed.', name, oldValue, newValue);\r\n    updateStyle(this);\r\n  }\r\n}\r\nfunction updateStyle(elem: Square) {\r\n  const shadow = elem.shadowRoot;\r\n  const style = shadow && shadow.querySelector('style');\r\n  style &&\r\n    (style.textContent = `\r\n  div {\r\n    width: ${elem.getAttribute('l')}px;\r\n    height: ${elem.getAttribute('l')}px;\r\n    background-color: ${elem.getAttribute('c')};\r\n  }\r\n  `);\r\n}\r\ncustomElements.define('custom-square', Square);\r\n\r\nexport default Square;\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport './square';\r\n\r\n/**\r\n * custom-square为webcomponents\r\n */\r\nconst WebComponentSquare = () => {\r\n  const [l, setL] = useState(100);\r\n  return (\r\n    <>\r\n      <Button onClick={() => setL(Math.random() * 100)}>change width</Button>\r\n      <custom-square l={l} c=\"#999\"></custom-square>\r\n    </>\r\n  );\r\n};\r\nexport default WebComponentSquare;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from 'react-router-dom';\r\n\r\n/**\r\n * this example is for react-router\r\n */\r\nexport default function RouterPage() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/home\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/topics\">Topic</Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/topics\">\r\n            <Topics />\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>;\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nfunction Topics() {\r\n  let match = useRouteMatch();\r\n  console.log(match);\r\n  if (match === null) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Topics</h2>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/components`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Topics page has its own <Switch> with more routes\r\n          that build on the /topics URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all topics, or\r\n          the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}\r\n","import React, {createContext } from 'react';\r\n\r\nexport const UPDATE_COLOR = 'update_color';\r\nexport interface ActionType {\r\n    type: typeof UPDATE_COLOR;\r\n    color: string\r\n}\r\nconst ColorContext = createContext('blue');\r\n\r\nexport const reducer = (state: string, action: ActionType) => {\r\n    switch(action.type){\r\n        case 'update_color': \r\n        return action.color;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const ColorProvider: React.FC = (props) => {\r\n    return (\r\n        <ColorContext.Provider value='bule'>\r\n        {props.children}\r\n        </ColorContext.Provider>\r\n    )\r\n}","import React, { useReducer } from 'react';\r\nimport { Button } from 'antd';\r\nimport { reducer } from './color';\r\n\r\n\r\nconst FontArea = () => {\r\n    const [color, dispatch] = useReducer(reducer, 'blue');\r\n\r\n    return (\r\n        <>\r\n            <div style={{ color }}>字体颜色为： {color}</div>\r\n            <Button onClick={() => dispatch({type:'update_color', color: 'red'})}>红色</Button>\r\n            <Button onClick={() => dispatch({type:'update_color', color: 'green'})}>绿色</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FontArea;","import * as React from 'react';\r\nimport EffectAsyncPage from '../components/hooks/useEffectAsync';\r\nimport RefPage from '../components/hooks/useRef';\r\nimport LazyLoadPage from '../components/suspense/lazyLoad';\r\nimport WebComponentsSquare from '../components/webComponents';\r\nimport RouterPage from '../components/router';\r\nimport FontArea from '../components/hooks/useReducer'\r\n\r\ntype RouterConfigType =\r\n  | {\r\n      hasSubMenu: true;\r\n      name: string;\r\n      children: Array<{\r\n        hasSubMenu: false;\r\n        path: string;\r\n        name: string;\r\n        component: JSX.Element;\r\n      }>;\r\n    }\r\n  | {\r\n      hasSubMenu: false;\r\n      path: string;\r\n      name: string;\r\n      component: React.FC | React.Component | JSX.Element;\r\n    };\r\nexport const routerConfig: RouterConfigType[] = [\r\n  {\r\n    hasSubMenu: true,\r\n    name: 'hooks',\r\n    children: [\r\n      {\r\n        hasSubMenu: false,\r\n        name: '异步请求',\r\n        path: '/hooks/useEffectAsync',\r\n        component: <EffectAsyncPage />,\r\n      },\r\n      {\r\n        hasSubMenu: false,\r\n        name: 'ref',\r\n        path: '/hooks/useRef',\r\n        component: <RefPage />,\r\n      },\r\n      {\r\n        hasSubMenu: false,\r\n        name: 'useReducer',\r\n        path: '/hooks/useReducer',\r\n        component: <FontArea />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    hasSubMenu: true,\r\n    name: 'suspense',\r\n    children: [\r\n      {\r\n        hasSubMenu: false,\r\n        name: 'lazyload',\r\n        path: '/suspense/lazyload',\r\n        component: <LazyLoadPage />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    hasSubMenu: true,\r\n    name: 'web components',\r\n    children: [\r\n      {\r\n        hasSubMenu: false,\r\n        name: 'square',\r\n        path: '/webComponents/square',\r\n        component: <WebComponentsSquare />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    hasSubMenu: true,\r\n    name: 'react-router',\r\n    children: [\r\n      {\r\n        hasSubMenu: false,\r\n        name: 'router',\r\n        path: '/router/index',\r\n        component: <RouterPage />,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Suspense, useState } from 'react';\r\nimport { Menu, Icon, Button, Spin, Layout } from 'antd';\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { routerConfig } from './router';\r\nimport './App.css';\r\n\r\nconst { Content, Header, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst App: React.FC = () => {\r\n  const [collapsed, setCollapsed] = useState<boolean>(false);\r\n  const [logoFontSize, setLogoFontSize] = useState<string>('24px');\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const onCollapsedClick = () => {\r\n    setLogoFontSize(logoFontSize === '24px' ? '12px' : '24px');\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Sider trigger={null} collapsible collapsed={collapsed}>\r\n        <div style={{ color: '#fff', fontSize: logoFontSize, textAlign: 'center', lineHeight: '36px', height: '36px' }}>\r\n          yard\r\n        </div>\r\n        <Menu\r\n          defaultSelectedKeys={['/hooks/useEffectAsync']}\r\n          defaultOpenKeys={['hooks']}\r\n          selectedKeys={[location.pathname]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n          {routerConfig.map(config => {\r\n            if (config.hasSubMenu === true) {\r\n              return (\r\n                <SubMenu title={<span>{config.name}</span>} key={config.name}>\r\n                  {/* <SpreadRouterConfig configs={config.children} /> */}\r\n                  {config.children.map(item => (\r\n                    <Menu.Item key={item.path}>\r\n                      <Link to={item.path}>{item.name}</Link>\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              );\r\n            }\r\n            return (\r\n              <Menu.Item key={config.path}>\r\n                <Link to={config.path}>{config.name}</Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header style={{ background: '#fff', padding: 0, height: '64px' }}>\r\n          <Icon\r\n            className=\"trigger\"\r\n            type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            onClick={onCollapsedClick}\r\n            style={{ margin: '0 16px' }}\r\n          />\r\n        </Header>\r\n        <Content\r\n          style={{\r\n            margin: '24px 16px',\r\n            padding: 24,\r\n            background: '#fff',\r\n            minHeight: 'calc(100vh - 112px)',\r\n          }}\r\n        >\r\n          <Switch>\r\n            {routerConfig.map(config => {\r\n              if (config.hasSubMenu === true) {\r\n                return config.children.map(child => <Route path={child.path}>{child.component}</Route>);\r\n              }\r\n              return <Route path={config.path}>{config.component}</Route>;\r\n            })}\r\n            {/* <Route path=\"/hooks/useEffectAsync\">\r\n                <EffectAsyncPage />\r\n              </Route>\r\n              <Route path=\"/hooks/useRef\">\r\n                <RefPage />\r\n              </Route>\r\n              <Route path=\"/suspense/lazyload\">\r\n                <LazyLoadPage />\r\n              </Route>\r\n              <Route path=\"/webComponents/square\">\r\n                <WebComponentsSquare />\r\n              </Route> */}\r\n\r\n            <Route path=\"/\">\r\n              <div>home</div>\r\n            </Route>\r\n          </Switch>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}